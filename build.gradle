plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'jacoco'
    // Sonar
    id "org.sonarqube" version "2.8"
}


group = 'com.pricehunter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.RELEASE")
}

dependencies {

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
    //implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    //implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
    //implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //implementation 'org.springframework.kafka:spring-kafka'

    // Lombok
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'

    // Logstash
    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'

    // Swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // ArchUnit
    testCompile "com.tngtech.archunit:archunit:0.13.0"
    testCompile "com.tngtech.archunit:archunit-junit5:0.13.0"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'org.springframework.kafka:spring-kafka-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

bootRun {
    jvmArgs = ["-Djava.security.egd=file:/dev/./urandom", "-Dspring.profiles.active=local", "-Dcom.sun.xml.bind.v2.bytecode.ClassTailor.noOptimize=true"]
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
